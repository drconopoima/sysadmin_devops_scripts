## From comparison among two files show side-by-side differences only. “grep” it’s filtering out lines that don’t have contents after the parenthesis “(”. Taken from https://stackoverflow.com/questions/38950802/how-to-display-line-numbers-in-side-by-side-diff-in-unix.

# sdiff -l file1 file2 | cat -n | grep -v -e '($'

## From comparison among two files show side-by-side similarities only. “grep” it’s filtering out lines that don’t have contents after the parenthesis “|” symbol. Idem

# diff -y file1 file2 | cat -n | grep -v -e '($'

## Run Bourne Shell-compatible "bash" scripts in sh (within limitations e.g. not `shopt`)
## Mainly to avoid busybox embedded systems to install as dependency complete bash shell
# echo -e "#!/usr/bin/env sh\nsh \$@\n" > /usr/bin/bash && chmod a+x /usr/bin/bash

## Generate sequence
# LOWER_RANGE=0
# UPPER_RANGE=99
# INCREMENT=3
# SEQUENCE=$(seq $LOWER_RANGE $INCREMENT $UPPER_RANGE);
## Generate sequentially numbered files
# DIRECTORY='/tmp'
# EXTENSION='.txt'
# for number in $SEQUENCE do touch ${DIRECTORY}/${number}.${EXTENSION}; done

# To retrieve in CSV a number of df commands in parallel from a number of destinations
pssh -h hosts -t 0 -p 18 -i "df -h / | tail -n +2 | tr -s ' ' | tr ' ' ','" | paste - - | tr -s ' ' | tr ' ' ',' | tr '\t' ',' | sort -t $',' -k3

# 

# Source: https://www.reddit.com/r/commandline/comments/45xxv1/why_find_stat_is_much_slower_than_ls/ 
# Drop caches for a fair comparison
# sudo sh -c "/bin/echo 3 > /proc/sys/vm/drop_caches";

## Find does not sort
# time find . -type d > /dev/null
## Find faster than ls -AlR
## Determined as such
# sudo sh -c "/bin/echo 3 > /proc/sys/vm/drop_caches"; time for i in {1..5}; do find . -type d > /dev/null; done

# Sort process start times:
## <pid> <iso datetime> <command>
## Sourced from answer by Mikko Rantalainen https://unix.stackexchange.com/a/549504/386719
ps -eo user,pid,ppid,c,etimes,tty,cmd --sort=etimes | awk 'BEGIN{now=systime()} {$5=strftime("%Y-%m-%d %H:%M:%S", now-$5); print $0}'

# Search packages whose origin isn't ubuntu
aptitude search "?installed?not(?origin(Ubuntu))" -F%p | xargs --no-run-if-empty apt-cache policy

# List biggest packages of system
dpkg-query --show --showformat='${Installed-Size}\t${Package}\n' | sort -rh | head -25 | awk '{print $1/1024, $2}'

# Purge configuration files from removed packages
dpkg --list |grep "^rc" | awk '{ print $2 }' | xargs --no-run-if-empty dpkg --purge

# Download Java JRE from Adoptium https://adoptium.net/temurin/archive
VERSION='11'; \
FILE_NAME="OpenJDK${VERSION}U"; \
PACKAGE='jre'; ${IFS#jre or jdk}; IFS=$' \n\t'; \
BUILD='x64_linux'; ${IFS# x64_linux, aarch64_linux, arm_linux, x64_mac, aarch64_mac}; IFS=$' \n\t'; \
VM='hotspot'; \
TAG="$(curl -s https://api.github.com/repos/adoptium/temurin${VERSION}-binaries/tags | jq '.[0].name' | tr -d '"' | tr -dc 'a-zA-Z0-9.+-')"; \
TAG_URLENCODED="$(jq -rn --arg x "${TAG}" '$x|@uri')"
TAG_EXTRACTED_VERSION="$(echo -n "${TAG}" | grep -oP ".{0,0}${VERSION}.*" | tr '+' '_')"
EXTENSION='.tar.gz'; \
curl -LOs "https://github.com/adoptium/temurin${VERSION}-binaries/releases/download/${TAG_URLENCODED}/${FILE_NAME}-${PACKAGE}_${BUILD}_${VM}_${TAG_EXTRACTED_VERSION}${EXTENSION}"


# Download NodeJS from nodejs.org
## Have pup installed
### go install pup@master
### brew install https://raw.githubusercontent.com/EricChiang/pup/master/pup.rb
VERSION_MAJOR='12'; \
VERSION_SHORTCUT="latest-v${VERSION_MAJOR}.x"
VERSION="$(basename -s ".tar.xz" $(curl -so - https://nodejs.org/dist/${VERSION_SHORTCUT}/ | pup 'body a:last-of-type text{}') | cut -c7-)"; \
BUILD='linux-x64'; ${IFS#linux-x64, darwin-x64, linux-arm64, linux-armv7l, win-x64, win-x86, x64, x86}; IFS=$' \n\t'; \
EXTENSION='.tar.gz'; ${IFS#.tar.gz .tar.xz .msi .zip -7z}; IFS=$' \n\t'; \
curl -LOs "https://nodejs.org/dist/${VERSION_SHORTCUT}/node-v${VERSION}-${BUILD}${EXTENSION}"

# Troubleshoot webcam video
## list usb devices
lsusb
## list pci devices
lspci
## list kernel modules
lsmod | grep -i video
## check /dev/video* permissions/ownership (user root, group video 660)
sudo ls -lh /dev/video*
## Add user to group video
sudo usermod -aG video $USER
newgrp video
newgrp $USER
## Install uvc and dependencies
sudo apt install --reinstall --install-recommends --install-suggests guvcview
## Review if kernel module uvcvideo.ko is present
uname -a
sudo find /lib/modules/$(uname -r)/ -name "uvcvideo*"
## ensure uvcvideo.ko isn't blacklisted from loading
grep -R uvcvideo /etc/modprobe.d/
## ensure uvcvideo.ko is loaded on startup
echo "uvcvideo.ko" | sudo tee -a /etc/modules-load.d/modules.conf

## Explore 40 elements from your music library randomly
find ~/Music -type f \( -name "*.flac" -o -name "*.mp3" \) -a -size +1M -print0 | xargs -0 -r shuf -ezn 40 | xargs -0 -r shuf -ezn 40 | xargs -0 -r -n1 mpv
### There could be more than number of arguments accepts in a single command shuf, to not always discard late-rounders a seconds pass through shuf is required to select precisely 40 on the second round. E.g. I can get 120 (3 selections of 40 in my library of thousands) without second pass
## Safely count files with newlines in the names
find . -type f -print0 | grep -zc '.*'

# Stress test maximum heat output
PTS_CONCURRENT_TEST_RUNS=3 TOTAL_LOOP_TIME=60 phoronix-test-suite stress-run brl-cad vkmark unvanquished

# RHCSA 9 practice AlmaLinux 9.2 full virtio
## https://www.collabora.com/news-and-blog/blog/2021/11/26/venus-on-qemu-enabling-new-virtual-vulkan-driver/
## https://www.youtube.com/watch?v=ud8vgI45RgE
qemu-img create -f qcow2 vulkan.qcow2 21G
qemu-system-x86_64                                                     \
    -enable-kvm                                                        \
    -cpu host                                                          \
    -smp 6,sockets=1,cores=6,threads=1,maxcpus=6                       \
    -m 12G                                                             \
    -M q35                                                             \
    -boot d -cdrom AlmaLinux-9-latest-x86_64-dvd.iso                   \
    -net nic,model=virtio                                              \
    -net user,hostfwd=tcp::2222-:22                                    \
    -vga virtio                                                        \
    -display gtk,gl=on,show-cursor=on                                  \
    -usb -device usb-tablet                                            \
    -object memory-backend-memfd,id=mem1,size=12G                      \
    -machine memory-backend=mem1                                       \
    -drive file=vulkan.qcow2,index=0,media=disk,if=virtio,format=qcow2 \
    -d guest_errors

mkdir -pv ${HOME}/manpages
# Install groff, e.g. brew install groff each package manager at this source https://command-not-found.com/groff
for i in $(seq 0 9) n; do
  >&2 echo -e "\nman${i}\n";
  if [[ -d /usr/share/man/man${i}/ ]]; then
  find /usr/share/man/man${i}/ -mindepth 1 -maxdepth 1 -type f -exec basename -a -s".${i}" \{\} \; | \
    xargs -r basename -a -s".${i}.gz" | xargs -r basename -a -s".${i}p" | xargs -r basename -a -s".${i}p.gz" | xargs -r basename -a -s".${i}m" | xargs -r basename -a -s".${i}m.gz"  | xargs -r basename -a -s".${i}x" | xargs -r basename -a -s".${i}x.gz" | xargs -r basename -a -s".${i}mp" | xargs -r basename -a -s".${i}mp.gz"  | xargs -r basename -a -s".${i}tcl" | xargs -r basename -a -s".${i}tcl.gz" | xargs -r basename -a -s".${i}ssl" | xargs -r basename -a -s".${i}ssl.gz" | xargs -r basename -a -s".${i}3ssl" | xargs -r basename -a -s".${i}3ssl.gz" | xargs -r basename -a -s".${i}pm" | xargs -r basename -a -s".${i}pm.gz" | xargs -r basename -a -s".${i}am" | xargs -r basename -a -s".${i}am.gz" | xargs -r basename -a -s".${i}form" | xargs -r basename -a -s".${i}form.gz"  | xargs -r basename -a -s".${i}menu" | xargs -r basename -a -s".${i}menu.gz" | xargs -r basename -a -s".${i}curses" | xargs -r basename -a -s".${i}curses.gz" | xargs -r basename -a -s".${i}ncurses" | xargs -r basename -a -s".${i}ncurses.gz";
  fi;
  for j in m p x am mp pm tcl ssl 3ssl form head menu type const curses ncurses; do
    if [[ -d /usr/share/man/man${i}${j}/ ]]; then
      >&2 echo -e "\nman${i}${j}\n";
      find /usr/share/man/man${i}${j}/ -mindepth 1 -maxdepth 1 -type f -exec basename -a -s".${i}" \{\} \; | \
      xargs -r basename -a -s".${i}.gz" | xargs -r basename -a -s".${i}${j}" | xargs -r basename -a -s".${i}${j}.gz";
    fi;
  done | xargs -r basename -a -s".${i}p" | xargs -r basename -a -s".${i}p.gz" | xargs -r basename -a -s".${i}m" | xargs -r basename -a -s".${i}m.gz"  | xargs -r basename -a -s".${i}x" | xargs -r basename -a -s".${i}x.gz" | xargs -r basename -a -s".${i}mp" | xargs -r basename -a -s".${i}mp.gz"  | xargs -r basename -a -s".${i}tcl" | xargs -r basename -a -s".${i}tcl.gz" | xargs -r basename -a -s".${i}ssl" | xargs -r basename -a -s".${i}ssl.gz" | xargs -r basename -a -s".${i}3ssl" | xargs -r basename -a -s".${i}3ssl.gz" | xargs -r basename -a -s".${i}pm" | xargs -r basename -a -s".${i}pm.gz" | xargs -r basename -a -s".${i}am" | xargs -r basename -a -s".${i}am.gz" | xargs -r basename -a -s".${i}form" | xargs -r basename -a -s".${i}form.gz"  | xargs -r basename -a -s".${i}menu" | xargs -r basename -a -s".${i}menu.gz" | xargs -r basename -a -s".${i}curses" | xargs -r basename -a -s".${i}curses.gz" | xargs -r basename -a -s".${i}ncurses" | xargs -r basename -a -s".${i}ncurses.gz";
done | sort | uniq | tr '\n' ' ' | xargs -r manbook --output ${HOME}/manpages;
